@using GP.core.Entities.identity
@using System.Security.Claims;
@inject SignInManager<AppUser> signInManger
@model UserView
@{
    ViewData["Title"] = "Verify";
}

<div class="row d-flex justify-content-between">
    <div class="col-md-5 text-center">
        <img src="@Model.VerfiyImage" class="rounded-circle" alt="@Model.DisplayName">
        <h3 class="fw-bold">@Model.DisplayName</h3>
        <p class="text-muted fw-bold py-2">@Model.FacessAccuracy  @Model.MatchStatus</p>
        <div>
            <i class="fas fa-star checked star"></i>
            <i class="fas fa-star checked star"></i>
            <i class="fas fa-star checked star"></i>
            <i class="fas fa-star checked"></i>
            <i class="fas fa-star checked"></i>
        </div>
        <div class="mt-3 d-flex align-items-center justify-content-center">
            <div class="item">
                <div class="number">@Model.ShipmentCount</div>
                <div class="label">Shipper</div>
            </div>
            <div class="separator"></div>
            <div class="item">
                <div class="number">@Model.TripCount</div>
                <div class="label">Traveler</div>
            </div>
        </div>
    </div>
    <div class="separator2"></div>

    <div class="col-md-6">
        <div class="profile-container">
            <div class="registration-date">First Registration: @Model.LastLogin</div>
            <div class="profile-item">
                <div class="label fw-bold">Personal Photo:</div>
                <div class="value px-5"><img src="@Model.image" alt="Personal Photo" class="photo"></div>
            </div>
            <div class="profile-item">
                <div class="label fw-bold">Email Address:</div>
                <div class="value fw-bold">@Model.Email</div>
            </div>
            <div class="profile-item">
                <div class="label fw-bold">Phone Number:</div>
                <div class="value fw-bold">@Model.PhoneNumber</div>
            </div>
            <div class="profile-item">
                <div class="label fw-bold">Address:</div>
                <div class="value fw-bold">@Model.City</div>
            </div>

            <button id="verifyButton" class="verified-button w-25 btn btn-primary" type="button" data-bs-toggle="modal" data-bs-target="#verificationModal">
                Verified
            </button>
        </div>
    </div>
</div>

<!-- النافذة المنبثقة -->
<div class="modal fade" id="verificationModal" tabindex="-1" aria-labelledby="verificationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="verificationModalLabel">User Verification</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Did you accept this user?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="rejectButton">Reject</button>
                <button type="button" class="btn btn-success" id="acceptButton">Accept</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('acceptButton').addEventListener('click', function () {
            updateUserTwoFactorStatus('@Model.Id', true);
        });

        document.getElementById('rejectButton').addEventListener('click', function () {
            $('#verificationModal').modal('hide'); // إخفاء النافذة المنبثقة عند الرفض
        });

        function updateUserTwoFactorStatus(userId, isEnableFactor) {
            fetch('/user/UpdateTwoFactorStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    // 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify({ id: userId, isEnableFactor: isEnableFactor })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        $('#verificationModal').modal('hide'); // إخفاء النافذة المنبثقة
                        document.getElementById('verifyButton').innerText = 'Back'; // تغيير زر "Verified" إلى "Back"
                        document.getElementById('verifyButton').classList.remove('btn-primary'); // إزالة الفئة "btn-primary"
                        document.getElementById('verifyButton').classList.add('btn-secondary'); // إضافة الفئة "btn-secondary"
                        document.getElementById('verifyButton').onclick = function () {
                            window.location.href = '/User/Index'; // تغيير الرابط إلى صفحة "Index" الخاصة بالمستخدم
                        };
                    } else {
                        alert('Failed to update status');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating the status');
                });
        }
    </script>
}


